var annotated_dup =
    [
        ["control", null, [
            ["classifier", null, [
                ["CITCLoader", "classcontrol_1_1classifier_1_1_c_i_t_c_loader.html", "classcontrol_1_1classifier_1_1_c_i_t_c_loader"],
                ["ClassLabel", "classcontrol_1_1classifier_1_1_class_label.html", "classcontrol_1_1classifier_1_1_class_label"],
                ["CClassLabelSet", "classcontrol_1_1classifier_1_1_c_class_label_set.html", "classcontrol_1_1classifier_1_1_c_class_label_set"],
                ["CTrackerState", "classcontrol_1_1classifier_1_1_c_tracker_state.html", "classcontrol_1_1classifier_1_1_c_tracker_state"],
                ["CStats", "classcontrol_1_1classifier_1_1_c_stats.html", "classcontrol_1_1classifier_1_1_c_stats"],
                ["CStatTracker", "classcontrol_1_1classifier_1_1_c_stat_tracker.html", "classcontrol_1_1classifier_1_1_c_stat_tracker"],
                ["CTCollection", "classcontrol_1_1classifier_1_1_c_t_collection.html", "classcontrol_1_1classifier_1_1_c_t_collection"],
                ["CTController", "classcontrol_1_1classifier_1_1_c_t_controller.html", "classcontrol_1_1classifier_1_1_c_t_controller"],
                ["CTrainingSet", "classcontrol_1_1classifier_1_1_c_training_set.html", "classcontrol_1_1classifier_1_1_c_training_set"]
            ]],
            ["ControllerResult", "classcontrol_1_1_controller_result.html", "classcontrol_1_1_controller_result"],
            ["Controller", "classcontrol_1_1_controller.html", "classcontrol_1_1_controller"],
            ["EvalController", "classcontrol_1_1_eval_controller.html", "classcontrol_1_1_eval_controller"],
            ["Sample", "classcontrol_1_1_sample.html", "classcontrol_1_1_sample"],
            ["InputSet", "classcontrol_1_1_input_set.html", "classcontrol_1_1_input_set"],
            ["InputSetIterator", "classcontrol_1_1_input_set_iterator.html", "classcontrol_1_1_input_set_iterator"],
            ["InputSetLoader", "classcontrol_1_1_input_set_loader.html", "classcontrol_1_1_input_set_loader"],
            ["TrainingCollection", "classcontrol_1_1_training_collection.html", "classcontrol_1_1_training_collection"],
            ["TrainingCollectionLoader", "classcontrol_1_1_training_collection_loader.html", "classcontrol_1_1_training_collection_loader"],
            ["TrainingController", "classcontrol_1_1_training_controller.html", "classcontrol_1_1_training_controller"],
            ["RunController", "classcontrol_1_1_run_controller.html", "classcontrol_1_1_run_controller"],
            ["ControllerParameters", "classcontrol_1_1_controller_parameters.html", "classcontrol_1_1_controller_parameters"],
            ["TrainingControllerParameters", "classcontrol_1_1_training_controller_parameters.html", "classcontrol_1_1_training_controller_parameters"],
            ["ImageInputSet", "classcontrol_1_1_image_input_set.html", "classcontrol_1_1_image_input_set"]
        ]],
        ["image", null, [
            ["transform", null, [
                ["Transformation", "classimage_1_1transform_1_1_transformation.html", "classimage_1_1transform_1_1_transformation"],
                ["Resize", "classimage_1_1transform_1_1_resize.html", "classimage_1_1transform_1_1_resize"],
                ["Crop", "classimage_1_1transform_1_1_crop.html", "classimage_1_1transform_1_1_crop"],
                ["Restriction", "classimage_1_1transform_1_1_restriction.html", "classimage_1_1transform_1_1_restriction"],
                ["Equalize", "classimage_1_1transform_1_1_equalize.html", "classimage_1_1transform_1_1_equalize"],
                ["Filter", "classimage_1_1transform_1_1_filter.html", "classimage_1_1transform_1_1_filter"],
                ["Edges", "classimage_1_1transform_1_1_edges.html", "classimage_1_1transform_1_1_edges"],
                ["BinaryScale", "classimage_1_1transform_1_1_binary_scale.html", "classimage_1_1transform_1_1_binary_scale"],
                ["BinaryScaleByMedian", "classimage_1_1transform_1_1_binary_scale_by_median.html", "classimage_1_1transform_1_1_binary_scale_by_median"],
                ["Inversion", "classimage_1_1transform_1_1_inversion.html", "classimage_1_1transform_1_1_inversion"],
                ["TransformEngine", "classimage_1_1transform_1_1_transform_engine.html", "classimage_1_1transform_1_1_transform_engine"]
            ]],
            ["GrayscaleImage", "classimage_1_1_grayscale_image.html", "classimage_1_1_grayscale_image"],
            ["ImageSerializer", "classimage_1_1_image_serializer.html", null]
        ]],
        ["math", null, [
            ["clFMatrix", "classmath_1_1cl_f_matrix.html", "classmath_1_1cl_f_matrix"],
            ["clFTensor", "classmath_1_1cl_f_tensor.html", "classmath_1_1cl_f_tensor"],
            ["Matrix", "classmath_1_1_matrix.html", "classmath_1_1_matrix"]
        ]],
        ["nnet", null, [
            ["CNN", "classnnet_1_1_c_n_n.html", "classnnet_1_1_c_n_n"],
            ["CNNDependencyTree", "classnnet_1_1_c_n_n_dependency_tree.html", "classnnet_1_1_c_n_n_dependency_tree"],
            ["CNNLayer", "classnnet_1_1_c_n_n_layer.html", "classnnet_1_1_c_n_n_layer"],
            ["CNNConvolutionLayer", "classnnet_1_1_c_n_n_convolution_layer.html", "classnnet_1_1_c_n_n_convolution_layer"],
            ["CNNPoolingLayer", "classnnet_1_1_c_n_n_pooling_layer.html", "classnnet_1_1_c_n_n_pooling_layer"],
            ["CNNMaxPoolingLayer", "classnnet_1_1_c_n_n_max_pooling_layer.html", "classnnet_1_1_c_n_n_max_pooling_layer"],
            ["CNNAvgPoolingLayer", "classnnet_1_1_c_n_n_avg_pooling_layer.html", "classnnet_1_1_c_n_n_avg_pooling_layer"],
            ["CNNModel", "classnnet_1_1_c_n_n_model.html", "classnnet_1_1_c_n_n_model"],
            ["CNNNode", "classnnet_1_1_c_n_n_node.html", "classnnet_1_1_c_n_n_node"],
            ["CNNOptimizer", "classnnet_1_1_c_n_n_optimizer.html", "classnnet_1_1_c_n_n_optimizer"],
            ["CNNStochOptimizer", "classnnet_1_1_c_n_n_stoch_optimizer.html", "classnnet_1_1_c_n_n_stoch_optimizer"],
            ["CNNStorageBP", "classnnet_1_1_c_n_n_storage_b_p.html", "classnnet_1_1_c_n_n_storage_b_p"],
            ["CNNStorageBPConvolution", "classnnet_1_1_c_n_n_storage_b_p_convolution.html", "classnnet_1_1_c_n_n_storage_b_p_convolution"],
            ["CNNStorageBPPooling", "classnnet_1_1_c_n_n_storage_b_p_pooling.html", "classnnet_1_1_c_n_n_storage_b_p_pooling"],
            ["CNNStorageBPMaxPooling", "classnnet_1_1_c_n_n_storage_b_p_max_pooling.html", "classnnet_1_1_c_n_n_storage_b_p_max_pooling"],
            ["CNNStorageBPAvgPooling", "classnnet_1_1_c_n_n_storage_b_p_avg_pooling.html", "classnnet_1_1_c_n_n_storage_b_p_avg_pooling"],
            ["CNNTopology", "classnnet_1_1_c_n_n_topology.html", "classnnet_1_1_c_n_n_topology"],
            ["CNNTopologyLayer", "classnnet_1_1_c_n_n_topology_layer.html", "classnnet_1_1_c_n_n_topology_layer"],
            ["CNNTopologyLayerConvolution", "classnnet_1_1_c_n_n_topology_layer_convolution.html", "classnnet_1_1_c_n_n_topology_layer_convolution"],
            ["CNNTopologyLayerPooling", "classnnet_1_1_c_n_n_topology_layer_pooling.html", "classnnet_1_1_c_n_n_topology_layer_pooling"],
            ["CNNTopologyLayerMaxPooling", "classnnet_1_1_c_n_n_topology_layer_max_pooling.html", "classnnet_1_1_c_n_n_topology_layer_max_pooling"],
            ["CNNTopologyLayerAvgPooling", "classnnet_1_1_c_n_n_topology_layer_avg_pooling.html", "classnnet_1_1_c_n_n_topology_layer_avg_pooling"],
            ["Filter", "classnnet_1_1_filter.html", "classnnet_1_1_filter"],
            ["Model", "classnnet_1_1_model.html", "classnnet_1_1_model"],
            ["Optimizer", "classnnet_1_1_optimizer.html", "classnnet_1_1_optimizer"],
            ["BackpropStorage", "classnnet_1_1_backprop_storage.html", "classnnet_1_1_backprop_storage"],
            ["MLPBatchOptimizer", "classnnet_1_1_m_l_p_batch_optimizer.html", "classnnet_1_1_m_l_p_batch_optimizer"],
            ["MLPTopology", "classnnet_1_1_m_l_p_topology.html", "classnnet_1_1_m_l_p_topology"],
            ["MLPerceptron", "classnnet_1_1_m_l_perceptron.html", "classnnet_1_1_m_l_perceptron"],
            ["MLPMiniBatchOptimizer", "classnnet_1_1_m_l_p_mini_batch_optimizer.html", "classnnet_1_1_m_l_p_mini_batch_optimizer"],
            ["MLPModel", "classnnet_1_1_m_l_p_model.html", "classnnet_1_1_m_l_p_model"],
            ["MLPModelSerializer", "classnnet_1_1_m_l_p_model_serializer.html", "classnnet_1_1_m_l_p_model_serializer"],
            ["MLPOptimizer", "classnnet_1_1_m_l_p_optimizer.html", "classnnet_1_1_m_l_p_optimizer"],
            ["MLPSerializer", "classnnet_1_1_m_l_p_serializer.html", "classnnet_1_1_m_l_p_serializer"],
            ["MLPStochOptimizer", "classnnet_1_1_m_l_p_stoch_optimizer.html", "classnnet_1_1_m_l_p_stoch_optimizer"],
            ["DecayMomentumOptimization", "classnnet_1_1_decay_momentum_optimization.html", "classnnet_1_1_decay_momentum_optimization"],
            ["DecayOptimization", "classnnet_1_1_decay_optimization.html", "classnnet_1_1_decay_optimization"],
            ["MomentumOptimization", "classnnet_1_1_momentum_optimization.html", "classnnet_1_1_momentum_optimization"],
            ["Optimization", "classnnet_1_1_optimization.html", "classnnet_1_1_optimization"],
            ["RPropPOptimization", "classnnet_1_1_r_prop_p_optimization.html", "classnnet_1_1_r_prop_p_optimization"],
            ["SGDOptimization", "classnnet_1_1_s_g_d_optimization.html", "classnnet_1_1_s_g_d_optimization"]
        ]],
        ["utils", null, [
            ["clKernelMap", "classutils_1_1cl_kernel_map.html", "classutils_1_1cl_kernel_map"],
            ["clPlatformSelector", "classutils_1_1cl_platform_selector.html", "classutils_1_1cl_platform_selector"],
            ["clQueueHandler", "classutils_1_1cl_queue_handler.html", "classutils_1_1cl_queue_handler"],
            ["clWrapper", "classutils_1_1cl_wrapper.html", "classutils_1_1cl_wrapper"],
            ["IOException", "classutils_1_1_i_o_exception.html", "classutils_1_1_i_o_exception"]
        ]]
    ];